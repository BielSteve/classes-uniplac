/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package projetozika.Pages.NotasFiscais;

import Models.Produto;
import Templates.ButtonEditor;
import Templates.ButtonRenderer;
import Utils.Methods;
import Utils.Styles;
import java.awt.BorderLayout;
import java.util.ArrayList;
import javax.swing.JCheckBox;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Welison
 */
public class ListarProdutos extends javax.swing.JPanel {
    
    private DefaultTableModel tableModel;
    private JTable tabela;
    private String mode;
    private JScrollPane barraRolagem;
    public ArrayList<Produto> produtos;

    /**
     * Creates new form ListarProdutos
     * @param mode Mostra como o painel foi chamado, se como edição ou como visualização
     */
    public ListarProdutos(String mode) {
        this.mode = mode;
        this.produtos = new ArrayList<>();
        
        initPage();
    }
    
    /**
     * Creates new form ListarProdutos
     * @param mode Mostra como o painel foi chamado, se como edição ou como visualização
     */
    public ListarProdutos(String id, String mode) {
        this.mode = mode;
        this.produtos = new ArrayList<>();
        
        for (int i = 0; i < 5; i++) {
            Produto p = new Produto(i, "Nome produto", "Unidade produto", "Descrição produto", "22/10/2019");
            produtos.add(p);
        }
        
        initPage();
    }
    
    private void initPage() {
        
        initComponents();
        Styles.setBorderTitle(this, Methods.getTranslation("ProdutosDaNotaFiscal"));
        setLayout(new BorderLayout());
        
        
        barraRolagem = new JScrollPane();
        Styles.defaultScroll(barraRolagem);
        updateCenterContent();
        add(barraRolagem, BorderLayout.CENTER);
    }
    
    private void updateCenterContent() {
        makeTable();
        barraRolagem.getViewport().setView(tabela);
    }
    
    private void makeTable() {
        tabela = new JTable();
        tabela.setRowHeight(35);
        // seta colunas
        String[] colunas = {
            Methods.getTranslation("Codigo"),
            Methods.getTranslation("Nome"),
            Methods.getTranslation("Unidade"),
            ""
        };
        if(! mode.equals("view")) {
            colunas[3] = Methods.getTranslation("Excluir");
        } 
        
       // seta modelo
        tableModel = new DefaultTableModel(null, colunas) {
            @Override
            public boolean isCellEditable(int row, int column) {
                if (mode.equals("view")) {
                    return false;
                } else {
                    if(column != 3){
                        return false;
                    }
                }
               return true;
            }
        };
        // adiciona linhas
        produtos.forEach(p -> {
            Object[] data = {p.getId(),p.getNome(),p.getUnidade(),""};
            if (! mode.equals("view")) {
                data[3] = Methods.getTranslation("Excluir");
            }
            tableModel.addRow(data);
        });
        // inicializa
        tabela.setModel(tableModel);
        
        if (! mode.equals("view")) {
            tabela.getColumn(Methods.getTranslation("Excluir")).setCellRenderer(new ButtonRenderer());
            tabela.getColumn(Methods.getTranslation("Excluir")).setCellEditor(new ButtonEditor(new JCheckBox()){
                @Override
                public void buttonAction() {
                    String idTabel = Methods.selectedTableItemId(tabela);
                    for (int i = 0; i < produtos.size(); i++) {
                        Produto p = produtos.get(i);
                        if (idTabel.equals(""+p.getId())) {
                            produtos.remove(p);
                        }
                    }
                    updateCenterContent();
                }
            });
        }
    }
    
    public void addProduto(Produto produto) {
        produtos.add(produto);
        updateCenterContent();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
