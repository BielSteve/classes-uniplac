/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package projetozika.Pages.NotasFiscais;

import Models.Produto;
import Templates.ButtonEditor;
import Templates.ButtonRenderer;
import Utils.Methods;
import Utils.Styles;
import java.awt.BorderLayout;
import javax.swing.JCheckBox;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Welison
 */
public class ListarProdutos extends javax.swing.JPanel {
    
    public static DefaultTableModel tableModel;
    public static JTable tabela;
    private String mode;

    /**
     * Creates new form ListarProdutos
     */
    public ListarProdutos(String mode) {
        initComponents();
        Styles.setBorderTitle(this, "Produtos da Nota Fiscal");
        setLayout(new BorderLayout());
        this.mode = mode;
        
        
        tabela = new JTable();
        tabela.setRowHeight(35);
        // seta colunas
        String[] colunas = {"Código", "Nome", "Unidade", ""};
        if(! mode.equals("view")) {
            colunas[3] = "Excluir";
        } 
        
       // seta modelo
        tableModel = new DefaultTableModel(null, colunas) {
            @Override
            public boolean isCellEditable(int row, int column) {
               if(column != 3){
                   return false;
               }
               return true;
            }
        };
        // adiciona linhas
        for(int i = 0; i < 5; i++) {
            Produto p = new Produto(i, "Nome produto", "Unidade produto", "Descrição produto", "22/10/2019");
            Object[] data = {p.getId(),p.getNome(),p.getUnidade(),""};
            if (! mode.equals("view")) {
                data[3] = "Excluir";
            }
            tableModel.addRow(data);
        }
    
        // inicializa
        tabela.setModel(tableModel);
        JScrollPane barraRolagem = new JScrollPane(tabela);
        Styles.defaultScroll(barraRolagem);
        add(barraRolagem, BorderLayout.CENTER);
        
        if (! mode.equals("view")) {
            tabela.getColumn("Excluir").setCellRenderer(new ButtonRenderer());
            tabela.getColumn("Excluir").setCellEditor(new ButtonEditor(new JCheckBox()){
                @Override
                public void buttonAction() {
                    String id = Methods.selectedTableItemId(tabela);
                    Methods.removeSelectedTableRow(tabela, tableModel);
                }
            });
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
